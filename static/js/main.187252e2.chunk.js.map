{"version":3,"sources":["components/Logout.tsx","services/requestService.ts","pages/GameMenu.tsx","pages/Login.tsx","pages/Minesweeper.tsx","pages/Registry.tsx","pages/SavedGames.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logout","history","useHistory","type","onClick","localStorage","removeItem","push","getHeaders","Accept","getItem","apiGet","path","headers","params","a","axios","get","process","apiPost","body","response","post","then","console","log","JSON","stringify","data","status","catch","err","GameMenu","useState","rows","columns","amountOfMines","gameInfo","setGameInfo","handleNewGame","gameId","handleChange","event","value","target","name","Number","onChange","href","Login","email","password","loginInfo","setLoginInfo","authorization","setItem","Minesweeper","id","useParams","Registry","lastName","firstName","registryInfo","setRegistryInfo","SavedGames","games","setGames","useEffect","result","fetch","map","game","index","App","className","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.187252e2.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function Logout(): JSX.Element {\n    const history = useHistory();\n  function handleClick(): void {\n      localStorage.removeItem(\"authorization\");\n      history.push(\"/\");\n  }\n\n  return (\n    <button type=\"button\" onClick={handleClick} >END SESSION</button>\n  );\n}\n","import axios from \"axios\";\n\nconst getHeaders = ()=>{\n    return {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"authorization\": localStorage.getItem(\"authorization\")\n    };\n}\n\nexport const apiGet = async  <ReqType>(\n    path: string,\n    headers?: any,\n    params?: any\n): Promise<ReqType> => {\n  return await axios.get(process.env.REACT_APP_BASE_URL!+path, {\n    headers: getHeaders(),\n    params\n  });\n};\n\nexport const apiPost = async <ReqType>(\n  path: string,\n  body?: object,\n  headers?: object,\n  params?: object\n): Promise<ReqType> => {\n  const response = axios\n    .post(process.env.REACT_APP_BASE_URL! + path, body, {\n      headers: getHeaders()\n      ,\n    })\n    .then((response) => {\n        console.log(JSON.stringify(response));\n        return {data: response.data, status: response.status};\n    })\n    .catch(err => {\n        console.log(err);\n        return err;\n      });\n  return response;\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiPost } from \"../services/requestService\";\n\ninterface NewGameResponse {\n    data: {\n        gameId: string;\n    },\n    status: number;\n}\n\ninterface State {\n    rows: number;\n    columns: number;\n    amountOfMines: number;\n  }\n  \n\nexport function GameMenu(): JSX.Element {\n    const [gameInfo, setGameInfo] = useState<State>({\n        rows: 0,\n        columns: 0,\n        amountOfMines: 0,\n    });\n    const history = useHistory();\n    const handleNewGame = async ()=> {\n        const response = await apiPost<NewGameResponse>(\"/api/games\", gameInfo);\n        if(response?.data?.gameId){\n            history.push(`/minesweeper/${response.data.gameId}`);\n        }\n    }\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n        const value = event.target.value;\n        setGameInfo({\n          ...gameInfo,\n          [event.target.name]: Number(value),\n        });\n      }\n\n  return (\n    <div>\n      <label>Rows\n     <input type=\"number\" name=\"rows\" value={gameInfo.rows} onChange={handleChange} />\n     </label><br/>\n     <label>Columns\n     <input type=\"number\" name=\"columns\" value={gameInfo.columns} onChange={handleChange}></input>\n     </label><br/>\n     <label>Amount of mines\n     <input type=\"number\" name=\"amountOfMines\" value={gameInfo.amountOfMines} onChange={handleChange}></input>\n     </label><br/>\n        <button type=\"button\" onClick={handleNewGame}>New Game</button>\n    <br/>\n      <a href=\"/saved-games\">\n        <button type=\"button\">Load Game</button>\n      </a>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiPost } from \"../services/requestService\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\ninterface TokenResponse {\n    data: {\n        authorization: string;\n    }\n    status: number;\n}\n\nexport function Login(): JSX.Element {\n    const history = useHistory();\n  const [loginInfo, setLoginInfo] = useState<State>({\n    email: \"\",\n    password: \"\",\n  });\n  async function handleSubmit(): Promise<any> {\n      const value = await apiPost<TokenResponse>(\"/api/user/login\", {...loginInfo});\n      if(value?.data?.authorization){\n          localStorage.setItem('authorization', value.data.authorization);\n          history.push(\"/menu\")\n      }\n\n}\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    const value = event.target.value;\n    setLoginInfo({\n      ...loginInfo,\n      [event.target.name]: value,\n    });\n  }\n\n  return (\n    <>\n      <form>\n        <label>\n          Email:\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={loginInfo.email}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={loginInfo.password}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <button type=\"button\" onClick={handleSubmit}>Log In</button>\n\n      </form>\n      <a href=\"/registry\">\n        <button type=\"button\">Sign Up</button>\n      </a>\n    </>\n  );\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n  id: string\n}\n\nexport function Minesweeper(): JSX.Element {\n  const { id } = useParams<RouteParams>();\n\n  return (\n    <div>\n        aa.aaa: id {id}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { apiPost } from \"../services/requestService\";\n\ninterface State {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\ninterface Response {\n    data: object;\n    status: number;\n}\n\nexport function Registry(): JSX.Element {\n    const history = useHistory();\n  const [registryInfo, setRegistryInfo] = useState<State>({\n    email: \"\",\n    password: \"\",\n    lastName: \"\",\n    firstName: \"\",\n  });\n\n  async function handleSubmit(): Promise<any> {\n    const response = await apiPost<Response>(\"/api/user/register\", {\n      ...registryInfo,\n    });\n    if (response?.status===200) {\n        history.push('/');\n    }\n  }\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    const value = event.target.value;\n    setRegistryInfo({\n      ...registryInfo,\n      [event.target.name]: value,\n    });\n  }\n\n  return (\n    <>\n      <form>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={registryInfo.firstName}\n            name=\"firstName\"\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          LastName:\n          <input\n            type=\"text\"\n            value={registryInfo.lastName}\n            name=\"lastName\"\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Email:\n          <input\n            type=\"text\"\n            value={registryInfo.email}\n            name=\"email\"\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={registryInfo.password}\n            name=\"password\"\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <button type=\"button\" onClick={handleSubmit}>Register</button>\n      </form>\n      <a href=\"/\">\n        <button type=\"button\">Go back</button>\n      </a>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { apiGet } from '../services/requestService';\n\n\ninterface OnGoingGamesResponse {\n    data: {\n        games: {gameId:string}[]\n    },\n    status: number;\n}\n\nexport function SavedGames(): JSX.Element {\n    const [games, setGames] = useState<{gameId:string}[]>();\n    useEffect(() =>{\n        const fetch = async ()=> {\n            const result = await apiGet<OnGoingGamesResponse>(\"/api/games/ongoing\");\n            if(result.status===200){\n                setGames(result.data.games);\n            }\n        };\n        fetch();\n\n    }, [])\n\n    return (\n    <div>\n        {games?.map((game, index) => <a href={`/minesweeper/${game.gameId}`}>{`SLOT ${index} - ${game.gameId}`}</a>)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Logout } from \"./components/Logout\";\nimport { GameMenu } from \"./pages/GameMenu\";\nimport { Login } from \"./pages/Login\";\nimport { Minesweeper } from \"./pages/Minesweeper\";\nimport { Registry } from \"./pages/Registry\";\nimport { SavedGames } from \"./pages/SavedGames\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path={\"/minesweeper_react\"}>\n              <Login />\n            </Route>\n             <Route exact path={\"/registry\"}>\n                <Registry />\n              </Route>\n             <Route exact path={\"/menu\"}>\n                <GameMenu />\n              </Route>\n              <Route exact path={\"/saved-games\"}>\n                <SavedGames />\n              </Route>\n              <Route exact path={\"/minesweeper/:id\"}>\n                <Minesweeper />\n              </Route>\n          </Switch>\n        </BrowserRouter>\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Logout />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}