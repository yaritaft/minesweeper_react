{"version":3,"sources":["components/Logout.tsx","components/BackToMenuButton.tsx","services/requestService.ts","pages/GameMenu.tsx","pages/Login.tsx","models/Game.tsx","components/Cell.tsx","components/Matrix.tsx","pages/Minesweeper.tsx","pages/Registry.tsx","pages/SavedGames.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logout","history","useHistory","type","onClick","localStorage","removeItem","push","ButtonTo","props","handleClick","path","message","getHeaders","Accept","getItem","apiGet","headers","params","a","axios","get","process","apiPost","body","response","post","then","console","log","JSON","stringify","data","status","catch","err","apiPatch","patch","GameMenu","useState","rows","columns","amountOfMines","gameInfo","setGameInfo","handleNewGame","gameId","handleChange","event","value","target","name","Number","onChange","Login","email","password","loginInfo","setLoginInfo","authorization","setItem","alert","CellState","GameState","CellComponent","clickRequest","x","y","clickAction","id","setGame","cellState","Checked","Flagged","Question","MatrixComponentInternal","game","state","matrix","map","row","indexRow","column","indexColumn","generateCell","MatrixComponent","React","memo","clickActions","Minesweeper","useParams","setClickAction","handleSaveGame","useEffect","updatedGame","Lost","Won","includes","getGame","clickActionIndex","indexOf","Registry","lastName","firstName","registryInfo","setRegistryInfo","SavedGames","games","setGames","result","fetch","index","App","className","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b150d08b.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function Logout(): JSX.Element {\n    const history = useHistory();\n  function handleClick(): void {\n      localStorage.removeItem(\"authorization\");\n      history.push(\"/\");\n  }\n\n  return (\n    <button type=\"button\" onClick={handleClick} >Logout</button>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Properties {\n  path: string;\n  message?: string;\n  handleClick?: ()=>Promise<void>;\n}\n\nexport function ButtonTo(props: Properties): JSX.Element {\n    const history = useHistory();\n  function handleClick(): void {\n      history.push(props.path);\n  }\n\n  return (\n    <button type=\"button\" onClick={props.handleClick ?? handleClick} >{props.message ?? \"Go Back\"}</button>\n  );\n}\n","import axios from \"axios\";\n\nconst getHeaders = ()=>{\n    return {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"authorization\": localStorage.getItem(\"authorization\")\n    };\n}\n\nexport const apiGet = async  <ReqType>(\n    path: string,\n    headers?: any,\n    params?: any\n): Promise<ReqType> => {\n  return await axios.get(process.env.REACT_APP_BASE_URL!+path, {\n    headers: getHeaders(),\n    params\n  });\n};\n\nexport const apiPost = async <ReqType>(\n  path: string,\n  body?: object,\n  headers?: object,\n  params?: object\n): Promise<ReqType> => {\n  const response = axios\n    .post(process.env.REACT_APP_BASE_URL! + path, body, {\n      headers: getHeaders()\n      ,\n    })\n    .then((response) => {\n        console.log(JSON.stringify(response));\n        return {data: response.data, status: response.status};\n    })\n    .catch(err => {\n        console.log(err);\n        return err;\n      });\n  return response;\n};\n\nexport const apiPatch = async <ReqType>(\n  path: string,\n  body?: object,\n  headers?: object,\n  params?: object\n): Promise<ReqType> => {\n  const response = axios\n    .patch(process.env.REACT_APP_BASE_URL! + path, body, {\n      headers: getHeaders()\n      ,\n    })\n    .then((response) => {\n        console.log(JSON.stringify(response));\n        return {data: response.data, status: response.status};\n    })\n    .catch(err => {\n        console.log(err);\n        return err;\n      });\n  return response;\n};","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ButtonTo } from \"../components/BackToMenuButton\";\nimport { apiPost } from \"../services/requestService\";\n\ninterface NewGameResponse {\n    data: {\n        gameId: string;\n    },\n    status: number;\n}\n\ninterface State {\n    rows: number;\n    columns: number;\n    amountOfMines: number;\n  }\n  \n\nexport function GameMenu(): JSX.Element {\n    const [gameInfo, setGameInfo] = useState<State>({\n        rows: 0,\n        columns: 0,\n        amountOfMines: 0,\n    });\n    const history = useHistory();\n    const handleNewGame = async ()=> {\n        const response = await apiPost<NewGameResponse>(\"/api/games\", gameInfo);\n        if(response?.data?.gameId){\n            history.push(`/minesweeper/${response.data.gameId}`);\n        }\n    }\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n        const value = event.target.value;\n        setGameInfo({\n          ...gameInfo,\n          [event.target.name]: Number(value),\n        });\n      }\n\n  return (\n    <div>\n      <label>Rows\n     <input type=\"number\" name=\"rows\" value={gameInfo.rows} onChange={handleChange} />\n     </label><br/>\n     <label>Columns\n     <input type=\"number\" name=\"columns\" value={gameInfo.columns} onChange={handleChange}></input>\n     </label><br/>\n     <label>Amount of mines\n     <input type=\"number\" name=\"amountOfMines\" value={gameInfo.amountOfMines} onChange={handleChange}></input>\n     </label><br/>\n        <button type=\"button\" onClick={handleNewGame}>New Game</button>\n    <br/>\n      <ButtonTo path=\"/saved-games\" message=\"Load Game\" />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ButtonTo } from \"../components/BackToMenuButton\";\nimport { apiPost } from \"../services/requestService\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\ninterface TokenResponse {\n    data: {\n        authorization: string;\n    }\n    status: number;\n}\n\nexport function Login(): JSX.Element {\n    const history = useHistory();\n  const [loginInfo, setLoginInfo] = useState<State>({\n    email: \"\",\n    password: \"\",\n  });\n  async function handleSubmit(): Promise<any> {\n      const value = await apiPost<TokenResponse>(\"/api/user/login\", {...loginInfo});\n      if(value?.data?.authorization){\n          localStorage.setItem('authorization', value.data.authorization);\n          history.push(\"/menu\")\n      }\n      else {\n        alert(\"Wrong credentials.\");\n      }\n\n}\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    const value = event.target.value;\n    setLoginInfo({\n      ...loginInfo,\n      [event.target.name]: value,\n    });\n  }\n\n  return (\n    <>\n      <form>\n        <label>\n          Email:\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={loginInfo.email}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={loginInfo.password}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <button type=\"button\" onClick={handleSubmit}>Log In</button>\n\n      </form>\n      <br/ >\n      <ButtonTo path=\"/registry\" message=\"Sign Up\" />\n    </>\n  );\n}\n","export enum CellState {\n    Flagged = \"Flagged\",\n    Checked = \"Checked\",\n    Question = \"Question\",\n    Unchecked = \"Unchecked\",\n  }\n  \n  export enum GameState {\n    InProgress = \"InProgress\",\n    Stopped = \"Stopped\",\n    Won = \"Won\",\n    Lost = \"Lost\",\n  }\n  \n  export interface CellCoordinates {\n    x: number;\n    y: number;\n  }\n  \n  export class Cell {\n    state: CellState;\n    mine: boolean;\n  }\n  \n  export class Game {\n    gameId?: string;\n    matrix?: Cell[][];\n    state: GameState;\n    amountOfMines: number;\n    userId: string;\n    secondsElapsed?: number;\n    secondsStopped?: number;\n    createdAt: Date;\n    finishedAt?: Date;\n    stoppedAt?: Date;\n    resumedAt?: Date;\n  }\n  \n  export interface GameResponse {\n    data: Game,\n    status: number\n}\n\nexport interface ClickRequest {\n    x: number;\n    y: number;\n    type: CellState;\n}","import React, { SetStateAction } from \"react\";\nimport { CellState, ClickRequest, Game, GameResponse } from \"../models/Game\";\nimport { apiPatch } from \"../services/requestService\";\n\ninterface Properties {\n  x: number;\n  y: number;\n  cellState: CellState;\n  setGame: React.Dispatch<SetStateAction<Game | undefined>>;\n  clickAction: CellState;\n  id: string;\n}\n\nexport function CellComponent(props: Properties): JSX.Element {\n    const clickRequest:ClickRequest = { x: props.x, y: props.y, type: props.clickAction };\n  const handleClick = async (): Promise<void> => {\n    const response = await apiPatch<GameResponse>(\n      `/api/games/${props.id}/click`,\n      clickRequest\n    );\n    if (response.data) {\n      props.setGame(response.data);\n    }\n  };\n  return (\n    <button type=\"button\" onClick={handleClick}>\n      {props.cellState === CellState.Checked\n        ? \"✓\"\n        : props.cellState === CellState.Flagged\n        ? \"⚑\"\n        : props.cellState === CellState.Question\n        ? \"?\"\n        : \" \"}\n        <br />\n    </button>\n  );\n}\n","import React, { SetStateAction } from \"react\";\nimport {\n  CellState,\n  Game,\n} from \"../models/Game\";\nimport { CellComponent } from \"./Cell\";\n\ninterface Properties {\n  id: string;\n  clickAction: CellState;\n  game: Game;\n  setGame: React.Dispatch<SetStateAction<Game | undefined>>;\n}\n\nfunction MatrixComponentInternal(props: Properties): JSX.Element {\n  const {game, setGame} = props;\n  const generateCell = (game: Game): JSX.Element => (\n    <>\n      {game?.matrix?.map((row, indexRow) => (\n        <>\n          {row.map((column, indexColumn) => (\n            <>\n              {game?.matrix?.[indexRow]?.[indexColumn]?.state && (\n                <CellComponent\n                  x={indexRow}\n                  y={indexColumn}\n                  cellState={game?.matrix?.[indexRow]?.[indexColumn]?.state}\n                  setGame={setGame}\n                  id={props.id}\n                  clickAction={props.clickAction}\n                />\n              )}\n            </>\n          ))}\n          <br />\n        </>\n      ))}\n    </>\n  );\n\n  return (\n    <div>\n      <br />\n      {game && game.state && game.matrix && generateCell(game)}\n      <br />\n      {`Game State: ${game?.state}`}\n\n    </div>\n  );\n}\nexport const MatrixComponent = React.memo(MatrixComponentInternal);\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { ButtonTo } from '../components/BackToMenuButton';\nimport { MatrixComponent } from '../components/Matrix';\nimport { CellState, Game, GameResponse, GameState } from '../models/Game';\nimport { apiGet, apiPatch } from '../services/requestService';\n\ninterface RouteParams {\n  id: string\n}\n\nconst clickActions: CellState[] = [CellState.Checked, CellState.Flagged, CellState.Question];\n\nexport function Minesweeper(): JSX.Element {\n  const { id } = useParams<RouteParams>();\n  const history = useHistory();\n  const [clickAction, setClickAction] = useState<CellState>(CellState.Checked);\n  const [game, setGame] = useState<Game>();\n  const handleClickAction =()=> {\n    const clickActionIndex = clickActions.indexOf(clickAction);\n    const clickNewActionIndex = clickActionIndex !== 2 ? clickActionIndex + 1 : 0;\n    setClickAction(clickActions[clickNewActionIndex]);\n  };\n  const handleSaveGame = async ()=> {\n    await apiPatch(`/api/games/${id}/state`);\n    history.push(\"/menu\")\n  }\n\n  useEffect(() => {\n    const getGame = async () => {\n      const response = await apiGet<GameResponse>(`/api/games/${id}`);\n      if (response.status===200 && response.data) {\n        const updatedGame = response.data;\n        if ([GameState.Lost, GameState.Won].includes(updatedGame.state)){\n          alert(`You have ${updatedGame?.state}`)\n          console.log(`You have ${updatedGame.state}`)\n          console.log(JSON.stringify(updatedGame))\n          history.push(\"/menu\");\n        }\n        setGame(updatedGame);\n      }\n    };\n    getGame();\n  }, [history, id]);\n\n  \n  useEffect(() => {\n        console.log(JSON.stringify(game))\n        if (game?.state && [GameState.Lost, GameState.Won].includes(game.state)){\n          alert(`You have ${game?.state}`)\n          console.log(`You have ${game.state}`)\n          console.log(JSON.stringify(game))\n          history.push(\"/menu\");\n        }\n  }, [game, history]);\n\n\n  return (\n    <div>\n        <button onClick={handleClickAction}>{clickAction===CellState.Checked ? \"Click\" : clickAction===CellState.Flagged ? \"Flag\" : clickAction }</button><br/>\n        {game && <MatrixComponent id={id} game={game} setGame={setGame} clickAction={clickAction} />}\n        <br />\n        <button type=\"button\" onClick={handleSaveGame} >Save Game</button>\n        < br/>\n        <ButtonTo path=\"/menu\" />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { ButtonTo } from \"../components/BackToMenuButton\";\nimport { apiPost } from \"../services/requestService\";\n\ninterface State {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\ninterface Response {\n    data: object;\n    status: number;\n}\n\nexport function Registry(): JSX.Element {\n    const history = useHistory();\n  const [registryInfo, setRegistryInfo] = useState<State>({\n    email: \"\",\n    password: \"\",\n    lastName: \"\",\n    firstName: \"\",\n  });\n\n  async function handleSubmit(): Promise<any> {\n    const response = await apiPost<Response>(\"/api/user/register\", {\n      ...registryInfo,\n    });\n    if (response?.status===200) {\n        history.push(\"/\");\n    }\n  }\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    const value = event.target.value;\n    setRegistryInfo({\n      ...registryInfo,\n      [event.target.name]: value,\n    });\n  }\n\n  return (\n    <>\n      <form>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={registryInfo.firstName}\n            name=\"firstName\"\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          LastName:\n          <input\n            type=\"text\"\n            value={registryInfo.lastName}\n            name=\"lastName\"\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Email:\n          <input\n            type=\"text\"\n            value={registryInfo.email}\n            name=\"email\"\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={registryInfo.password}\n            name=\"password\"\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <button type=\"button\" onClick={handleSubmit}>Register</button>\n      </form>\n      <br/>\n      <ButtonTo path=\"/\" />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { ButtonTo } from \"../components/BackToMenuButton\";\nimport { apiGet, apiPatch } from \"../services/requestService\";\n\ninterface OnGoingGamesResponse {\n  data: {\n    games: { gameId: string }[];\n  };\n  status: number;\n}\n\nexport function SavedGames(): JSX.Element {\n  const [games, setGames] = useState<{ gameId: string }[]>();\n  useEffect(() => {\n    const fetch = async () => {\n      const result = await apiGet<OnGoingGamesResponse>(\"/api/games/ongoing\");\n      if (result.status === 200) {\n        setGames(result.data.games);\n      }\n    };\n    fetch();\n  }, []);\n\n  const handleResumeGameFactory = (id: string): ()=>Promise<void> => {\n      const resumeGame = async(): Promise<void> => {\n          await apiPatch(`/api/games/${id}/state`);\n      }\n      return resumeGame;\n  };\n\n  return (\n    <div>\n      {games?.map((game, index) => (\n        <div onClick={handleResumeGameFactory(game?.gameId)}>\n          <ButtonTo\n            path={`/minesweeper/${game.gameId}`}\n            message={`SLOT ${index} - Game ID: ${game.gameId}`}\n          />\n          <br />\n        </div>\n      ))}\n      <br />\n        <ButtonTo path=\"/menu\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Logout } from \"./components/Logout\";\nimport { GameMenu } from \"./pages/GameMenu\";\nimport { Login } from \"./pages/Login\";\nimport { Minesweeper } from \"./pages/Minesweeper\";\nimport { Registry } from \"./pages/Registry\";\nimport { SavedGames } from \"./pages/SavedGames\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path={\"/\" }>\n              <Login />\n            </Route>\n            <Route exact path={\"/registry\"}>\n              <Registry />\n            </Route>\n            <Route exact path={\"/menu\"}>\n              <GameMenu />\n            </Route>\n            <Route exact path={\"/saved-games\"}>\n              <SavedGames />\n            </Route>\n            <Route exact path={\"/minesweeper/:id\"}>\n              <Minesweeper />\n            </Route>\n          </Switch>\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Logout />\n        </BrowserRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}