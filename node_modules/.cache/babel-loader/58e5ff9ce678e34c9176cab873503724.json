{"ast":null,"code":"import _regeneratorRuntime from\"/home/yari/Desktop/minesweeper_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/yari/Desktop/minesweeper_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/yari/Desktop/minesweeper_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{apiGet}from'../services/requestService';import{jsx as _jsx}from\"react/jsx-runtime\";export function SavedGames(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),games=_useState2[0],setGames=_useState2[1];useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return apiGet(\"/api/games/ongoing\");case 2:result=_context.sent;if(result.status===200){setGames(result.data.games);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetch(){return _ref.apply(this,arguments);};}();fetch();},[]);return/*#__PURE__*/_jsx(\"div\",{children:games===null||games===void 0?void 0:games.map(function(game,index){return/*#__PURE__*/_jsx(\"a\",{href:\"/minesweeper/\".concat(game.gameId),children:\"SLOT \".concat(index,\" - \").concat(game.gameId)});})});}","map":{"version":3,"sources":["/home/yari/Desktop/minesweeper_react/src/pages/SavedGames.tsx"],"names":["React","useEffect","useState","apiGet","SavedGames","games","setGames","fetch","result","status","data","map","game","index","gameId"],"mappings":"8cAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,4BAAvB,C,2CAUA,MAAO,SAASC,CAAAA,UAAT,EAAmC,CACtC,cAA0BF,QAAQ,EAAlC,wCAAOG,KAAP,eAAcC,QAAd,eACAL,SAAS,CAAC,UAAK,CACX,GAAMM,CAAAA,KAAK,0FAAG,oKACWJ,CAAAA,MAAM,CAAuB,oBAAvB,CADjB,QACJK,MADI,eAEV,GAAGA,MAAM,CAACC,MAAP,GAAgB,GAAnB,CAAuB,CACnBH,QAAQ,CAACE,MAAM,CAACE,IAAP,CAAYL,KAAb,CAAR,CACH,CAJS,sDAAH,kBAALE,CAAAA,KAAK,0CAAX,CAMAA,KAAK,GAER,CATQ,CASN,EATM,CAAT,CAWA,mBACA,qBACKF,KADL,SACKA,KADL,iBACKA,KAAK,CAAEM,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,qBAAiB,UAAG,IAAI,wBAAkBD,IAAI,CAACE,MAAvB,CAAP,yBAAiDD,KAAjD,eAA4DD,IAAI,CAACE,MAAjE,GAAjB,EAAX,CADL,EADA,CAKH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { apiGet } from '../services/requestService';\n\n\ninterface OnGoingGamesResponse {\n    data: {\n        games: {gameId:string}[]\n    },\n    status: number;\n}\n\nexport function SavedGames(): JSX.Element {\n    const [games, setGames] = useState<{gameId:string}[]>();\n    useEffect(() =>{\n        const fetch = async ()=> {\n            const result = await apiGet<OnGoingGamesResponse>(\"/api/games/ongoing\");\n            if(result.status===200){\n                setGames(result.data.games);\n            }\n        };\n        fetch();\n\n    }, [])\n\n    return (\n    <div>\n        {games?.map((game, index) => <a href={`/minesweeper/${game.gameId}`}>{`SLOT ${index} - ${game.gameId}`}</a>)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}