{"ast":null,"code":"var _jsxFileName = \"/home/yari/Desktop/minesweeper_react/src/pages/SavedGames.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { apiGet } from '../services/requestService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SavedGames() {\n  _s();\n\n  const [games, setGames] = useState();\n  useEffect(() => {\n    const fetch = async () => {\n      const result = await apiGet(\"/api/games/ongoing\");\n\n      if (result.status === 200) {\n        setGames(result.data.games);\n      }\n    };\n\n    fetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"aaaaa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SavedGames, \"YEbnIZ1oYpvBVmsKTboPetBvj5Q=\");\n\n_c = SavedGames;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedGames\");","map":{"version":3,"sources":["/home/yari/Desktop/minesweeper_react/src/pages/SavedGames.tsx"],"names":["React","useEffect","useState","apiGet","SavedGames","games","setGames","fetch","result","status","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,4BAAvB;;AAUA,OAAO,SAASC,UAAT,GAAmC;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMM,KAAK,GAAG,YAAW;AACrB,YAAMC,MAAM,GAAG,MAAML,MAAM,CAAuB,oBAAvB,CAA3B;;AACA,UAAGK,MAAM,CAACC,MAAP,KAAgB,GAAnB,EAAuB;AACnBH,QAAAA,QAAQ,CAACE,MAAM,CAACE,IAAP,CAAYL,KAAb,CAAR;AACH;AACJ,KALD;;AAMAE,IAAAA,KAAK;AAER,GATQ,EASN,EATM,CAAT;AAWA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GAlBeH,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { apiGet } from '../services/requestService';\n\n\ninterface OnGoingGamesResponse {\n    data: {\n        games: {gameId:string}[]\n    },\n    status: number;\n}\n\nexport function SavedGames(): JSX.Element {\n    const [games, setGames] = useState<{gameId:string}[]>();\n    useEffect(() =>{\n        const fetch = async ()=> {\n            const result = await apiGet<OnGoingGamesResponse>(\"/api/games/ongoing\");\n            if(result.status===200){\n                setGames(result.data.games);\n            }\n        };\n        fetch();\n\n    }, [])\n\n    return (\n    <div>\n        aaaaa\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}