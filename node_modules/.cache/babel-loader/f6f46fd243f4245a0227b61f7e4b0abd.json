{"ast":null,"code":"var _jsxFileName = \"/home/yari/Desktop/minesweeper_react/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// interface TokenResponse {\n//   data: {\n//     authorization: string;\n//   };\n// }\nexport function Login() {\n  _s();\n\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  async function handleSubmit() {\n    const x = axios.post(process.env.REACT_APP_BASE_URL + \"/api/user/login\", { ...loginInfo\n    }).then(response => {\n      console.log(JSON.stringify(response));\n      return response.data;\n    }).catch(err => {\n      // If there was a problem, we want to\n      // dispatch the error condition\n      dispatch(loginError(err.data));\n      console.log(err);\n      return err;\n    });\n  } // .then((response: any) => {\n  // console.log(x.data);\n  //   localStorage.setItem(\"authorization\", response.data[\"authorization\"]);\n  // });\n  //   useEffect(() => {\n  //     apiPost(\"/api/user/login\", loginInfo).then(\n  //       (response: any) => {\n  //         localStorage.setItem('authorization', response.data[\"authorization\"]);\n  //       }\n  //     );\n  //   }, []);\n\n\n  function handleChange(event) {\n    const value = event.target.value;\n    setLoginInfo({ ...loginInfo,\n      [event.target.name]: value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: loginInfo.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: loginInfo.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/registry\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"Xtjg6LHJtn0Vu0mGyhG8GGHy5JI=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/yari/Desktop/minesweeper_react/src/pages/Login.tsx"],"names":["axios","React","useState","Login","loginInfo","setLoginInfo","email","password","handleSubmit","x","post","process","env","REACT_APP_BASE_URL","then","response","console","log","JSON","stringify","data","catch","err","dispatch","loginError","handleChange","event","value","target","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAQA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASC,KAAT,GAA8B;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAQ;AAChDI,IAAAA,KAAK,EAAE,EADyC;AAEhDC,IAAAA,QAAQ,EAAE;AAFsC,GAAR,CAA1C;;AAIA,iBAAeC,YAAf,GAA6C;AACzC,UAAMC,CAAC,GAAGT,KAAK,CACZU,IADO,CACFC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAkC,iBADhC,EACmD,EACzD,GAAGT;AADsD,KADnD,EAIPU,IAJO,CAIDC,QAAD,IAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAZ;AACA,aAAOA,QAAQ,CAACK,IAAhB;AACH,KAPO,EAQPC,KARO,CAQDC,GAAG,IAAI;AACV;AACA;AACAC,MAAAA,QAAQ,CAACC,UAAU,CAACF,GAAG,CAACF,IAAL,CAAX,CAAR;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA,aAAOA,GAAP;AACD,KAdK,CAAV;AAeL,GArBoC,CAsBjC;AACA;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASG,YAAT,CAAsBC,KAAtB,EAAwE;AACtE,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAtB,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,OAACsB,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBF;AAFV,KAAD,CAAZ;AAID;;AAED,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA,0CAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAEvB,SAAS,CAACE,KAHnB;AAIE,UAAA,QAAQ,EAAEmB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA,6CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAErB,SAAS,CAACG,QAHnB;AAIE,UAAA,QAAQ,EAAEkB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAoBE;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAEjB;AAA9B;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE;AAAG,MAAA,IAAI,EAAC,WAAR;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA,kBADF;AA8BD;;GAxEeL,K;;KAAAA,K","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { apiPost } from \"../services/requestService\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\n// interface TokenResponse {\n//   data: {\n//     authorization: string;\n//   };\n// }\n\nexport function Login(): JSX.Element {\n  const [loginInfo, setLoginInfo] = useState<State>({\n    email: \"\",\n    password: \"\",\n  });\n  async function handleSubmit(): Promise<void> {\n      const x = axios\n        .post(process.env.REACT_APP_BASE_URL! + \"/api/user/login\", {\n          ...loginInfo,\n        })\n        .then((response) => {\n            console.log(JSON.stringify(response));\n            return response.data;\n        })\n        .catch(err => {\n            // If there was a problem, we want to\n            // dispatch the error condition\n            dispatch(loginError(err.data));\n            console.log(err);\n            return err;\n          });\n}\n    // .then((response: any) => {\n    // console.log(x.data);\n    //   localStorage.setItem(\"authorization\", response.data[\"authorization\"]);\n    // });\n  //   useEffect(() => {\n  //     apiPost(\"/api/user/login\", loginInfo).then(\n  //       (response: any) => {\n  //         localStorage.setItem('authorization', response.data[\"authorization\"]);\n  //       }\n  //     );\n  //   }, []);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    const value = event.target.value;\n    setLoginInfo({\n      ...loginInfo,\n      [event.target.name]: value,\n    });\n  }\n\n  return (\n    <>\n      <form>\n        <label>\n          Email:\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={loginInfo.email}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={loginInfo.password}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <input type=\"submit\" onClick={handleSubmit} />\n      </form>\n      <a href=\"/registry\">\n        <button type=\"button\">Sign Up</button>\n      </a>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}