{"ast":null,"code":"import _regeneratorRuntime from\"/home/yari/Desktop/minesweeper_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/yari/Desktop/minesweeper_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var getHeaders=function getHeaders(){return{Accept:\"application/json\",\"Content-Type\":\"application/json\",\"Access-Control-Allow-Origin\":\"*\",\"authorization\":localStorage.getItem(\"authorization\")};};export var apiGet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(path,headers,params){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(process.env.REACT_APP_BASE_URL+path,{headers:getHeaders(),params:params});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function apiGet(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export var apiPost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(path,body,headers,params){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:response=axios.post(process.env.REACT_APP_BASE_URL+path,body,{headers:getHeaders()}).then(function(response){console.log(JSON.stringify(response));return{data:response.data,status:response.status};}).catch(function(err){console.log(err);return err;});return _context2.abrupt(\"return\",response);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function apiPost(_x4,_x5,_x6,_x7){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/yari/Desktop/minesweeper_react/src/services/requestService.ts"],"names":["axios","getHeaders","Accept","localStorage","getItem","apiGet","path","headers","params","get","process","env","REACT_APP_BASE_URL","apiPost","body","response","post","then","console","log","JSON","stringify","data","status","catch","err"],"mappings":"mTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAI,CACnB,MAAO,CACCC,MAAM,CAAE,kBADT,CAEC,eAAgB,kBAFjB,CAGC,8BAA+B,GAHhC,CAIC,gBAAiBC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAJlB,CAAP,CAMH,CAPD,CASA,MAAO,IAAMC,CAAAA,MAAM,0FAAG,iBAClBC,IADkB,CAElBC,OAFkB,CAGlBC,MAHkB,wIAKPR,CAAAA,KAAK,CAACS,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,CAAgCN,IAA1C,CAAgD,CAC3DC,OAAO,CAAEN,UAAU,EADwC,CAE3DO,MAAM,CAANA,MAF2D,CAAhD,CALO,6GAAH,kBAANH,CAAAA,MAAM,oDAAZ,CAWP,MAAO,IAAMQ,CAAAA,OAAO,2FAAG,kBACrBP,IADqB,CAErBQ,IAFqB,CAGrBP,OAHqB,CAIrBC,MAJqB,mIAMfO,QANe,CAMJf,KAAK,CACnBgB,IADc,CACTN,OAAO,CAACC,GAAR,CAAYC,kBAAZ,CAAkCN,IADzB,CAC+BQ,IAD/B,CACqC,CAClDP,OAAO,CAAEN,UAAU,EAD+B,CADrC,EAKdgB,IALc,CAKT,SAACF,QAAD,CAAc,CAChBG,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAZ,EACA,MAAO,CAACO,IAAI,CAAEP,QAAQ,CAACO,IAAhB,CAAsBC,MAAM,CAAER,QAAQ,CAACQ,MAAvC,CAAP,CACH,CARc,EASdC,KATc,CASR,SAAAC,GAAG,CAAI,CACVP,OAAO,CAACC,GAAR,CAAYM,GAAZ,EACA,MAAOA,CAAAA,GAAP,CACD,CAZY,CANI,kCAmBdV,QAnBc,0DAAH,kBAAPF,CAAAA,OAAO,0DAAb","sourcesContent":["import axios from \"axios\";\n\nconst getHeaders = ()=>{\n    return {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"authorization\": localStorage.getItem(\"authorization\")\n    };\n}\n\nexport const apiGet = async  <ReqType>(\n    path: string,\n    headers?: any,\n    params?: any\n): Promise<ReqType> => {\n  return await axios.get(process.env.REACT_APP_BASE_URL!+path, {\n    headers: getHeaders(),\n    params\n  });\n};\n\nexport const apiPost = async <ReqType>(\n  path: string,\n  body?: object,\n  headers?: object,\n  params?: object\n): Promise<ReqType> => {\n  const response = axios\n    .post(process.env.REACT_APP_BASE_URL! + path, body, {\n      headers: getHeaders()\n      ,\n    })\n    .then((response) => {\n        console.log(JSON.stringify(response));\n        return {data: response.data, status: response.status};\n    })\n    .catch(err => {\n        console.log(err);\n        return err;\n      });\n  return response;\n};\n"]},"metadata":{},"sourceType":"module"}