{"ast":null,"code":"var _jsxFileName = \"/home/yari/Desktop/minesweeper_react/src/pages/GameMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiPost } from \"../services/requestService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GameMenu() {\n  _s();\n\n  const [gameInfo, setGameInfo] = useState({\n    rows: 0,\n    columns: 0,\n    amountOfMines: 0\n  });\n  const history = useHistory();\n\n  const handleNewGame = async () => {\n    var _response$data;\n\n    const response = await apiPost(\"/api/games\");\n\n    if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.gameId) {\n      history.push(`/minesweeper/${response.data.gameId}`);\n    }\n  };\n\n  function handleChange(event) {\n    const value = event.target.value;\n    setGameInfo({ ...gameInfo,\n      [event.target.name]: Number(value)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Rows\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"rows\",\n        value: gameInfo.rows,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Columns\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"columns\",\n        value: gameInfo.columns,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"amountOfMines\",\n      value: gameInfo.amountOfMines,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleNewGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/saved-games\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Load Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameMenu, \"kl1733mUFQf1myXuebCPbbilEkk=\", false, function () {\n  return [useHistory];\n});\n\n_c = GameMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameMenu\");","map":{"version":3,"sources":["/home/yari/Desktop/minesweeper_react/src/pages/GameMenu.tsx"],"names":["React","useState","useHistory","apiPost","GameMenu","gameInfo","setGameInfo","rows","columns","amountOfMines","history","handleNewGame","response","data","gameId","push","handleChange","event","value","target","name","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAiBC,OAAjB,QAAgC,4BAAhC;;AAgBA,OAAO,SAASC,QAAT,GAAiC;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAQ;AAC5CM,IAAAA,IAAI,EAAE,CADsC;AAE5CC,IAAAA,OAAO,EAAE,CAFmC;AAG5CC,IAAAA,aAAa,EAAE;AAH6B,GAAR,CAAxC;AAKA,QAAMC,OAAO,GAAGR,UAAU,EAA1B;;AACA,QAAMS,aAAa,GAAG,YAAW;AAAA;;AAC7B,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAAkB,YAAlB,CAA9B;;AACA,QAAGS,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAEC,IAAb,mDAAG,eAAgBC,MAAnB,EAA0B;AACtBJ,MAAAA,OAAO,CAACK,IAAR,CAAc,gBAAeH,QAAQ,CAACC,IAAT,CAAcC,MAAO,EAAlD;AACH;AACJ,GALD;;AAOA,WAASE,YAAT,CAAsBC,KAAtB,EAAwE;AACpE,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAZ,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACY,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBC,MAAM,CAACH,KAAD;AAFjB,KAAD,CAAX;AAID;;AAEL,sBACE;AAAA,4BACE;AAAA,sCACD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,KAAK,EAAEb,QAAQ,CAACE,IAAjD;AAAuD,QAAA,QAAQ,EAAES;AAAjE;AAAA;AAAA;AAAA;AAAA,cADC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIC;AAAA,yCACA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,SAA1B;AAAoC,QAAA,KAAK,EAAEX,QAAQ,CAACG,OAApD;AAA6D,QAAA,QAAQ,EAAEQ;AAAvE;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAOC;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,eAA1B;AAA0C,MAAA,KAAK,EAAEX,QAAQ,CAACI,aAA1D;AAAyE,MAAA,QAAQ,EAAEO;AAAnF;AAAA;AAAA;AAAA;AAAA,YAPD,eAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEL,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASA;AAAA;AAAA;AAAA;AAAA,YATA,eAUE;AAAG,MAAA,IAAI,EAAC,cAAR;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAtCeP,Q;UAMIF,U;;;KANJE,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiGet, apiPost } from \"../services/requestService\";\n\ninterface NewGameResponse {\n    data: {\n        gameId: string;\n    },\n    status: number;\n}\n\ninterface State {\n    rows: number;\n    columns: number;\n    amountOfMines: number;\n  }\n  \n\nexport function GameMenu(): JSX.Element {\n    const [gameInfo, setGameInfo] = useState<State>({\n        rows: 0,\n        columns: 0,\n        amountOfMines: 0,\n    });\n    const history = useHistory();\n    const handleNewGame = async ()=> {\n        const response = await apiPost<NewGameResponse>(\"/api/games\");\n        if(response?.data?.gameId){\n            history.push(`/minesweeper/${response.data.gameId}`);\n        }\n    }\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n        const value = event.target.value;\n        setGameInfo({\n          ...gameInfo,\n          [event.target.name]: Number(value),\n        });\n      }\n\n  return (\n    <div>\n      <label>Rows\n     <input type=\"number\" name=\"rows\" value={gameInfo.rows} onChange={handleChange} />\n     </label>\n     <label>Columns\n     <input type=\"number\" name=\"columns\" value={gameInfo.columns} onChange={handleChange}></input>\n     </label>\n     <input type=\"number\" name=\"amountOfMines\" value={gameInfo.amountOfMines} onChange={handleChange}></input>\n        <button type=\"button\" onClick={handleNewGame}>New Game</button>\n    <br/>\n      <a href=\"/saved-games\">\n        <button type=\"button\">Load Game</button>\n      </a>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}